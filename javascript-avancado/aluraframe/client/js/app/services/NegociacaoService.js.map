{"version":3,"sources":["../../app-es6/services/NegociacaoService.js"],"names":["HttpService","ConnectionFactory","NegociacaoDao","Negociacao","NegociacaoService","_http","url","get","then","negociacoes","map","Date","objeto","data","quantidade","valor","catch","Error","_obterNegoacioes","Promise","all","obterNegociacoesDaSemana","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","reduce","todasNegociacoes","array","concat","erro","console","log","negociacao","getConnection","connection","dao","adiciona","listaTodos","apagaTodos","listaAtual","obterNegociacoes","filter","some","isEquals","negociacaoExistente"],"mappings":"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","file":"NegociacaoService.js","sourcesContent":["import {HttpService} from './HttpService';\nimport {ConnectionFactory} from './ConnectionFactory';\nimport {NegociacaoDao} from '../dao/NegociacaoDao';\nimport {Negociacao} from '../models/Negociacao';\n\nexport class NegociacaoService{\n    constructor(){\n        this._http = new HttpService();\n    }\n\n    _obterNegoacioes(url){\n        return this._http\n            .get(url)\n            .then(negociacoes => {\n                return negociacoes.map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n            }).catch(() => {\n                throw new Error('Não foi possível obter as negociações');\n            });\n    }\n\n    obterNegociacoesDaSemana(){\n        return this._obterNegoacioes('negociacoes/semana');\n    }\n\n    obterNegociacoesDaSemanaAnterior(){\n        return this._obterNegoacioes('negociacoes/anterior');\n    }\n\n    obterNegociacoesDaSemanaRetrasada(){\n        return this._obterNegoacioes('negociacoes/retrasada');\n    }\n\n    obterNegociacoes(){\n        return Promise\n            .all([\n                this.obterNegociacoesDaSemana(),\n                this.obterNegociacoesDaSemanaAnterior(),\n                this.obterNegociacoesDaSemanaRetrasada()]\n            ).then(negociacoes =>negociacoes\n                    .reduce((todasNegociacoes, array) => todasNegociacoes.concat(array), [])            \n            ).catch((erro) => {\n                console.log('Error: ', erro);\n                throw new Error(\"Não foi possível obter as negociações\");\n            })\n    }\n\n    cadastrar(negociacao){\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.adiciona(negociacao))\n            .then(() => 'Negociação adicionada com sucesso')\n            .catch(() => {\n                console.log('Não foi possível adicionar a negociação');\n                throw new Error(\"Não foi possível adicionar a negociação\");\n            })\n    }\n\n    listaTodos(){\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.listaTodos())\n            .catch(erro => {\n                console.log(\"Não foi possível obter as negociações\");\n                throw new Error(\"Não foi possível obter as negociações\");\n            });\n    }\n\n    apagaTodos(){\n        return ConnectionFactory\n            .getConnection()\n            .then(connection => new NegociacaoDao(connection))\n            .then(dao => dao.apagaTodos())\n            .catch(erro => {\n                console.log(erro)\n                throw new Error(\"Não foi possível apagar as negociações\");\n            });\n    }\n\n    importa(listaAtual){\n        return this.obterNegociacoes()\n            .then(negociacoes =>\n                negociacoes\n                    .filter(negociacao => \n                        !listaAtual.some(negociacaoExistente => \n                            negociacao.isEquals(negociacaoExistente)\n                    ))            \n            ).catch((erro) => {\n                console.log(erro);\n                throw new Error(\"Não foi possível obter as negociações\");\n            });\n    }\n}"]}